**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: bnet.hr
* @MinSWversion: V1.1.1/53.15
* @Revision 0 - [27/03/2014] Francis De Paemeleere
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=bnet.hr|timezone=UTC+01:00|maxdays=7|cultureinfo=hr-HR|charset=UTF-8|titlematchfactor=90|firstshow=2}

urldate.format {datestring|yyyy-MM-dd}
url_index{url|http://raspored.bnet.hr/bnetepg/call/method::get_entries::channels::|channel|::date::|urldate}
url_index.headers 	  {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages

index_variable_element.modify {addstart|'config_site_id'}

index_showsplit.scrub {regex||{"id":\d*,"channel_id":'index_variable_element',[^}]*}||}
index_showsplit.modify {cleanup(removeduplicates=equal)}

index_start.scrub {regex||"start"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}
index_stop.scrub {regex||"end"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}
index_title.scrub {regex||"title"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}
index_subtitle.scrub {regex||"sub-title"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}
index_description.scrub {regex||"desc"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}
index_actor.scrub {regex||"actors"\s*:\s*\[([^\]]*)\]||}
index_writer.scrub {regex||"writers"\s*:\s*\[([^\]]*)\]||}
index_director.scrub {regex||"directors"\s*:\s*\[([^\]]*)\]||}
index_temp_1.scrub {regex||"image"\s*:\s*"([^"\\]*(?:\\.[^"\\]*)*)"||}

index_start.modify {substring(type=regex)|\d{4}-\d{2}-\d{2}T(\d{2}:\d{2}):\d{2}Z}
index_stop.modify {substring(type=regex)|\d{4}-\d{2}-\d{2}T(\d{2}:\d{2}):\d{2}Z}

index_actor.modify {replace|,|\|}
index_writer.modify {replace|,|\|}
index_director.modify {replace|,|\|}

index_actor.modify {substring(type=regex)|"([^"\\]*(?:\\.[^"\\]*)*)"}
index_writer.modify {substring(type=regex)|"([^"\\]*(?:\\.[^"\\]*)*)"}
index_director.modify {substring(type=regex)|"([^"\\]*(?:\\.[^"\\]*)*)"}

index_title.modify  {cleanup(style=jsondecode) }
index_subtitle.modify  {cleanup(style=jsondecode) }
index_description.modify  {cleanup(style=jsondecode) }
index_actor.modify  {cleanup(style=jsondecode) }
index_writer.modify  {cleanup(style=jsondecode) }
index_director.modify  {cleanup(style=jsondecode) }
index_temp_1.modify  {cleanup(style=jsondecode) }

* sometimes there are shows withtout a title
* If a description exists, the show title is put to -
index_temp_2.modify {clear}
index_temp_2.modify {addstart('index_description'not="")| - }
* the title will only be filled with -, if the title is empty and the description not!
index_title.modify  {addstart('index_title'="")|'index_temp_2'}

index_showicon.modify {addstart('index_temp_1'not="")|http://epg.bnet.hr/images/'index_temp_1'}


**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|http://raspored.bnet.hr/bnetepg/call/method::get_init2}
*index_site_channel.scrub {multi|()||||}
*index_site_id.scrub {regex||"channels"\s*:\s*\[([^\]]*)\]||}
*scope.range {(channellist)|end}
*index_site_channel.modify {substring(type=regex)|'index_site_id' ""id":\d*[^}]*"title":"([^"\\]*(?:\\.[^"\\]*)*)""}
*index_site_id.modify {substring(type=regex)|'index_site_id' ""id":(\d*)[^}]*"title":"[^"\\]*(?:\\.[^"\\]*)*""}
*index_site_channel.modify  {cleanup(style=jsondecode) }
*index_site_id.modify  {cleanup(style=jsondecode) }
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
